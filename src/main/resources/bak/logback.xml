<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="LOG_HOME" value="D:/eclipse/WorkSpace/shop/logs" />
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>
    <!-- 按照每天生成日志文件 -->
    <appender name="FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/TestWeb.log.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- 生成html格式日志开始 -->
    <appender name="HTML" class="ch.qos.logback.core.FileAppender">
        <!-- 过滤器，只记录WARN级别的日志 -->
        <!-- <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>   -->

        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="ch.qos.logback.classic.html.HTMLLayout">
                <pattern>%p%d%msg%M%F{32}%L</pattern>
            </layout>
        </encoder>
        <file>D:/eclipse/WorkSpace/shop/logs/error-log.html</file>
    </appender>

    <!-- 生成html格式日志结束 -->

    <!-- 每天生成一个html格式的日志开始 -->
    <appender name="FILE_HTML"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/Test111.log.%d{yyyy-MM-dd}.html</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="ch.qos.logback.classic.html.HTMLLayout">
                <pattern>%p%d%msg%M%F{32}%L</pattern>
            </layout>
        </encoder>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- 每天生成一个html格式的日志结束 -->


    <!-- show parameters for hibernate sql 专为 Hibernate 定制 -->
    <!-- <logger name="org.hibernate.type.descriptor.sql.BasicBinder"  level="TRACE" />
    <logger name="org.hibernate.type.descriptor.sql.BasicExtractor"  level="DEBUG" />
    <logger name="org.hibernate.SQL" level="DEBUG" />
    <logger name="org.hibernate.engine.QueryParameters" level="DEBUG" />
    <logger name="org.hibernate.engine.query.HQLQueryPlan" level="DEBUG" /> -->

    <!--myibatis log configure-->
    <logger name="com.apache.ibatis" level="TRACE"/>
    <logger name="java.sql.Connection" level="DEBUG"/>
    <logger name="java.sql.Statement" level="DEBUG"/>
    <logger name="java.sql.PreparedStatement" level="DEBUG"/>

    <!-- 日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
        <appender-ref ref="HTML" />
        <appender-ref ref="FILE_HTML" />
    </root>
    <!--日志异步到数据库 -->
    <!--<appender name="DB" class="ch.qos.logback.classic.db.DBAppender">-->
    <!--<!–日志异步到数据库 –>-->
    <!--<connectionSource class="ch.qos.logback.core.db.DriverManagerConnectionSource">-->
    <!--<!–连接池 –>-->
    <!--<dataSource class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
    <!--<driverClass>com.mysql.jdbc.Driver</driverClass>-->
    <!--<url>jdbc:mysql://127.0.0.1:3306/databaseName</url>-->
    <!--<user>root</user>-->
    <!--<password>root</password>-->
    <!--</dataSource>-->
    <!--</connectionSource>-->
    <!--</appender>-->
</configuration>


<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<configuration scan="true" scanPeriod="60 seconds">-->
    <!--&lt;!&ndash; 彩色日志 &ndash;&gt;-->
    <!--&lt;!&ndash; 彩色日志依赖的渲染类 &ndash;&gt;-->
    <!--<conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>-->
    <!--<conversionRule conversionWord="wex"-->
                    <!--converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>-->
    <!--<conversionRule conversionWord="wEx"-->
                    <!--converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>-->
    <!--&lt;!&ndash; 彩色日志格式 &ndash;&gt;-->
    <!--<property name="CONSOLE_LOG_PATTERN"-->
              <!--value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(-&#45;&#45;){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>-->

    <!--<contextName>heeexy</contextName>-->

    <!--&lt;!&ndash;定义日志文件的存储地址 &ndash;&gt;-->
    <!--<property name="LOG_HOME" value="logs"/>-->

    <!--<appender name="Console" class="ch.qos.logback.core.ConsoleAppender">-->
        <!--&lt;!&ndash;此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息&ndash;&gt;-->
        <!--<filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
            <!--<level>DEBUG</level>-->
        <!--</filter>-->
        <!--&lt;!&ndash;encoder 默认配置为PatternLayoutEncoder&ndash;&gt;-->
        <!--<encoder>-->
            <!--<pattern>${CONSOLE_LOG_PATTERN}</pattern>-->
            <!--<charset>utf-8</charset>-->
        <!--</encoder>-->
    <!--</appender>-->

    <!--<appender name="RollingFile"-->
              <!--class="ch.qos.logback.core.rolling.RollingFileAppender">-->
        <!--<filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
            <!--<level>DEBUG</level>-->
        <!--</filter>-->
        <!--&lt;!&ndash; 可让每天产生一个日志文件，最多 180 个，自动回滚 &ndash;&gt;-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
            <!--<fileNamePattern>${LOG_HOME}/%d{yyyy-MM,aux}/heeexy-%d{yyyy-MM-dd}.log-->
            <!--</fileNamePattern>-->
            <!--&lt;!&ndash; keep 180 days' worth of history capped at 50GB total size &ndash;&gt;-->
            <!--<maxHistory>180</maxHistory>-->
            <!--<totalSizeCap>40GB</totalSizeCap>-->
        <!--</rollingPolicy>-->
        <!--&lt;!&ndash; 日志文件的格式 &ndash;&gt;-->
        <!--<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
            <!--<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level -&#45;&#45; [%file:%line][%thread] - %msg%n</pattern>-->
            <!--<charset>utf-8</charset>-->
        <!--</encoder>-->
    <!--</appender>-->

    <!--<appender name="AsyncRollingFile" class="ch.qos.logback.classic.AsyncAppender">-->
        <!--<appender-ref ref="RollingFile"/>-->
        <!--<includeCallerData>true</includeCallerData>-->
    <!--</appender>-->

    <!--&lt;!&ndash; 输出到控制台和文件，可定义更多的 Appender &ndash;&gt;-->
    <!--<root level="INFO">-->
        <!--<appender-ref ref="Console"/>-->
        <!--<appender-ref ref="AsyncRollingFile"/>-->
    <!--</root>-->

    <!--&lt;!&ndash; 下面配置一些第三方包的日志过滤级别，用于避免刷屏 &ndash;&gt;-->
    <!--<logger name="org.mybatis" level="INFO"/>-->
    <!--<logger name="org.springframework" level="WARN"/>-->
    <!--<logger name="org.apache" level="WARN"/>-->
    <!--&lt;!&ndash;如果需要打印SQL,可以把下面的级别设置为DEBUG &ndash;&gt;-->
    <!--<logger name="com.heeexy.example.dao" level="DEBUG"/>-->

<!--</configuration>-->